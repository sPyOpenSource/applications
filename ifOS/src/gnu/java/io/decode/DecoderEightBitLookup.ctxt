#BlueJ class context
comment0.target=DecoderEightBitLookup
comment0.text=\n\ Numerous\ character\ encodings\ utilize\ only\ eight\ bits.\ \ These\ can\n\ be\ easily\ and\ efficiently\ be\ converted\ to\ characters\ using\ lookup\ tables.\n\ This\ class\ is\ the\ common\ superclass\ of\ all\ <code>Decoder</code>\ classes\n\ that\ use\ eight\ bit\ lookup\ tables.\ \ All\ a\ subclass\ implementor\ has\ to\n\ do\ is\ define\ an\ encoding\ name\ and\ create\ a\ class\ consisting\ of\ a\ \n\ static\ lookup\ table\ overriding\ the\ default.\ \n\n\ @version\ 0.0\n\n\ @author\ Aaron\ M.\ Renn\ (arenn@urbanophile.com)\n
comment1.params=in
comment1.target=DecoderEightBitLookup(java.io.InputStream)
comment1.text=\n\ Constructors\n
comment2.params=buf\ offset\ len
comment2.target=int\ charsInByteArray(byte[],\ int,\ int)
comment2.text=\n\ This\ method\ returns\ the\ number\ of\ chars\ that\ can\ be\ converted\ out\ of\n\ the\ <code>len</code>\ bytes\ in\ the\ specified\ array\ starting\ at\n\ <code>offset</code>.\ \ This\ will\ be\ identical\ to\ the\ number\ of\ bytes\n\ in\ that\ range,\ i.e.,\ <code>len</code>.\n\ @return\ \n
comment3.params=buf\ buf_offset\ len\ cbuf\ cbuf_offset
comment3.target=char[]\ convertToChars(byte[],\ int,\ int,\ char[],\ int)
comment3.text=\n\ Convert\ the\ requested\ bytes\ to\ chars\n\ @return\ \n
comment4.params=cbuf\ offset\ len
comment4.target=int\ read(char[],\ int,\ int)
comment4.text=\n\ Read\ the\ requested\ number\ of\ chars\ from\ the\ underlying\ stream\n\ @param\ cbuf\n\ @return\ \n\ @throws\ java.io.IOException\n
numComments=5
