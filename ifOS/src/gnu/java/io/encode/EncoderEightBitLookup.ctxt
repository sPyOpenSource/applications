#BlueJ class context
comment0.target=EncoderEightBitLookup
comment0.text=\n\ Numerous\ character\ encodings\ utilize\ only\ eight\ bits.\ \ These\ can\n\ be\ easily\ and\ efficiently\ be\ converted\ to\ characters\ using\ lookup\ tables.\n\ This\ class\ is\ the\ common\ superclass\ of\ all\ <code>Encoder</code>\ classes\n\ that\ use\ eight\ bit\ lookup\ tables.\ \ All\ a\ subclass\ implementor\ has\ to\n\ do\ is\ define\ an\ encoding\ name\ and\ create\ a\ class\ consisting\ of\ a\ \n\ static\ lookup\ table\ overriding\ the\ default.\ \n\n\ @version\ 0.0\n\n\ @author\ Aaron\ M.\ Renn\ (arenn@urbanophile.com)\n
comment1.params=
comment1.target=void\ loadTable()
comment1.text=\n\ This\ method\ loads\ the\ lookup\ table\ (actually\ a\ decoder\ lookup\ table)\n\ into\ a\ larger\ encoder\ table.\ \ Yes,\ this\ is\ slow,\ but\ it\ is\ only\ done\n\ the\ first\ time\ the\ class\ is\ accessed.\n
comment2.params=out
comment2.target=EncoderEightBitLookup(java.io.OutputStream)
comment2.text=\n\ Constructors\n
comment3.params=buf\ offset\ len
comment3.target=int\ bytesInCharArray(char[],\ int,\ int)
comment3.text=\n\ This\ method\ returns\ the\ number\ of\ bytes\ that\ can\ be\ converted\ out\ of\n\ the\ <code>len</code>\ chars\ in\ the\ specified\ array\ starting\ at\n\ <code>offset</code>.\ \ This\ will\ be\ identical\ to\ the\ number\ of\ chars\n\ in\ that\ range,\ i.e.,\ <code>len</code>.\n
comment4.params=buf\ buf_offset\ len\ bbuf\ bbuf_offset
comment4.target=byte[]\ convertToBytes(char[],\ int,\ int,\ byte[],\ int)
comment4.text=\n\ Convert\ the\ requested\ bytes\ to\ chars\n
comment5.params=buf\ offset\ len
comment5.target=void\ write(char[],\ int,\ int)
comment5.text=\n\ Write\ the\ requested\ number\ of\ chars\ to\ the\ underlying\ stream\n
numComments=6
